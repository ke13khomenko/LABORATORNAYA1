Лабораторная 1

Задание 1

1. После того, как открыла программу IAR в командной строке выбрала
вкладку Project -> Create New Project... В окне выбрала С++ и далее
main, после нажала на OK. Выбрала нужную папку,
назвала файл и сохранила его. В результате этих
действий создался проект и файл main.cpp.

2. Скачала файл startup.cpp и переименовала его
в startup_stm32F411.cpp, а затем добавила его в
свой проект с помощью функции Add -> Add Files...

3. После приступила к созданию папок AbstractHardware/
Registers/FileValue, Common для этого правой кнопкой
мыши нажала на проект и выбрала Add -> Add Group...
И назвала папки, после они появились в структуре
проекта.

image::https://github.com/Musenzova99/LABA1/blob/master/1.3.jpg[]

4.Создала стуктуру своего проекта в соответствие с
необходимыми папками.

5.После приступила к настраиванию STACK и HEAP, для
этого нажала правой кнопкой мыши на проект, выбрала
Options... После в категории Linker -> Config,
поставила галочку на Override default и нажав Edit...
Перешла во вкладку Stack/Heap Sizes настроила необходимые
параметры.

image::https://github.com/Musenzova99/LABA1/blob/master/1.5.jpg[]

6.С помощью GitHub Desktop склонировала себе на компьютер
папку преподавателя.

7.После этого скопировала содержимое папок AbstractHardware/
Registers и Common с проекта преподавателя в свою папку.

8.Затем в файле main.cpp написала программу
предоставленную в задании.

image::https://github.com/Musenzova99/LABA1/blob/master/1.8.jpg[]

Задание 2

1. После во вкладке Project -> Rebuild All проивела
проверку программы на наличие ошибок. В ходе
проверки выявились некоторые ошибки. Для их устранения
потребовалось произвести замету функций в коде
Enable поменяла на High, а Disable заменила на
Low. После этого у меня устранились ошибки, но
появилось предупреждения. Для устранения которого
мне пришлось удалить лишние папки. В результате
проведенных действий программа работала без ошибок.

image::https://github.com/Musenzova99/LABA1/blob/master/2.1.jpg[]

2.Затем произвела загрузку программы в симулятор,
в результате появилось окно Disassembly.

3.После с помощью клавиш F10 и F11 произвела пошаговую
отладку программы.

4.Нажав правой кнопкой мыши на проект, выбрала
Options... в категории Debugger выбрать Driver
ST-LINK.

image::https://github.com/Musenzova99/LABA1/blob/master/2.4.jpg[]

5.Затем с помощью USB провода подключила плату к
компьютеру.

6.После загрузила программу в плату нажав
Download and Debug.

7.Произвела пошаговую отладку программы в соответствие
с п.3.

8.В результате проведения отладки получила, что
при попадании на строку программы с функцией High
светодиод на плате загорается, а при функции Low
гаснет.

Задание 3

1.Чтобы запустить анализатор стека необходимо
правой кнопкой мыши нажать на проект и выбрать Options...
Затем в категории Linker->Advanced  поставить галочку
на Enable stack usage analysis. В полученном файле
видим размер стека , который равен 8 байтам.

image::https://github.com/Musenzova99/LABA1/blob/master/3.1.jpg[]

2.Изменим размер стека в проекте в соответствии с
рекомендуемым аналогично п.5 задания 1.

3.С помощью действий, описанных выше мы получим выходной
.map файл.

4.В .map файле описываются адреса переменных и функций
в памяти микроконтроллера, а также объем
занимаемого ими количества памяти. Так же там содержится информация
о STACK и HEAP.

5.Поставим размер HEAP равный 0.Так как память выделенная под  HEAP
считается свободной, мы можем допустить её равной 0.
Размер STACK не  может быть равен 0, так как туда
записываются данные, созданные компоновщиком,
поэтому если задать данное значение программа будет
работать неправильно.



